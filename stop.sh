#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è–º–∏${NC}"
echo "================================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
CLEAN_VOLUMES=false
CLEAN_IMAGES=false

for arg in "$@"; do
    case $arg in
        --volumes)
            CLEAN_VOLUMES=true
            shift
            ;;
        --images)
            CLEAN_IMAGES=true
            shift
            ;;
        --all)
            CLEAN_VOLUMES=true
            CLEAN_IMAGES=true
            shift
            ;;
        --help|-h)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [--volumes] [--images] [--all]"
            echo "  --volumes    –£–¥–∞–ª–∏—Ç—å —Ç–æ–º–∞ –¥–∞–Ω–Ω—ã—Ö"
            echo "  --images     –£–¥–∞–ª–∏—Ç—å –æ–±—Ä–∞–∑—ã"
            echo "  --all        –£–¥–∞–ª–∏—Ç—å –≤—Å—ë (volumes + images)"
            exit 0
            ;;
    esac
done

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo -e "${YELLOW}‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker-compose down

# –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
echo -e "${YELLOW}üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker rm -f visitor_db visitor_app 2>/dev/null || true

# –£–¥–∞–ª—è–µ–º volumes –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥
if [ "$CLEAN_VOLUMES" = true ]; then
    echo -e "${YELLOW}üíæ –£–¥–∞–ª–µ–Ω–∏–µ volumes (–¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã!)...${NC}"
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã! (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        docker-compose down -v
        docker volume rm visitor-management-system_postgres_data 2>/dev/null || true
        echo -e "${GREEN}‚úÖ Volumes —É–¥–∞–ª–µ–Ω—ã${NC}"
    else
        echo -e "${BLUE}‚ÑπÔ∏è  Volumes –æ—Å—Ç–∞–≤–ª–µ–Ω—ã${NC}"
    fi
fi

# –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–∑—ã –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥
if [ "$CLEAN_IMAGES" = true ]; then
    echo -e "${YELLOW}üñºÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤...${NC}"
    docker rmi visitor-management-system_app 2>/dev/null || true
    docker image prune -f 2>/dev/null || true
    echo -e "${GREEN}‚úÖ –û–±—Ä–∞–∑—ã —É–¥–∞–ª–µ–Ω—ã${NC}"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
echo
echo -e "${GREEN}‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å—ë –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
RUNNING_CONTAINERS=$(docker ps -q --filter "name=visitor")
if [ -z "$RUNNING_CONTAINERS" ]; then
    echo -e "${GREEN}üéØ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤—Å—ë –µ—â—ë —Ä–∞–±–æ—Ç–∞—é—Ç:${NC}"
    docker ps --filter "name=visitor"
fi

echo
echo -e "${BLUE}üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏:${NC}"
echo "   ./start.sh                 # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ"
echo "   ./stop.sh --volumes        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å + —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
echo "   ./stop.sh --all            # –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞"
echo "   docker system prune -a     # –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë Docker"