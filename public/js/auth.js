// js/auth.js - –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
const auth = {
    currentUser: null,

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    async check() {
        try {
            const response = await fetch('/api/auth/check');
            const data = await response.json();

            if (data.authenticated) {
                this.currentUser = data.user;
                this.updateUserDisplay();
                this.updateAdminNavigation(); // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                return true;
            } else {
                this.redirectToLogin();
                return false;
            }
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', err);
            this.redirectToLogin();
            return false;
        }
    },

    // –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    async logout() {
        try {
            await fetch('/api/auth/logout', { method: 'POST' });
            window.location.href = '/login';
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', err);
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            window.location.href = '/login';
        }
    },

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateUserDisplay() {
        const userBadge = document.getElementById('user-badge');
        if (userBadge && this.currentUser) {
            const roleText = {
                'admin': 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                'moderator': '‚öôÔ∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä',
                'skd': 'üîí –°–ö–î'
            }[this.currentUser.role] || this.currentUser.role;

            userBadge.textContent = `${roleText} | ${this.currentUser.fullName}`;
        }
    },

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    updateAdminNavigation() {
        const adminNav = document.getElementById('admin-nav');
        if (adminNav && this.currentUser) {
            if (this.currentUser.role === 'admin') {
                adminNav.style.display = 'block';
                console.log('‚úÖ –ê–¥–º–∏–Ω —Å—Å—ã–ª–∫–∞ –ø–æ–∫–∞–∑–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', this.currentUser.username);
            } else {
                adminNav.style.display = 'none';
                console.log('‚ÑπÔ∏è –ê–¥–º–∏–Ω —Å—Å—ã–ª–∫–∞ —Å–∫—Ä—ã—Ç–∞ –¥–ª—è —Ä–æ–ª–∏:', this.currentUser.role);
            }
        }

        // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        this.updateRoleBasedElements();
    },

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    updateRoleBasedElements() {
        if (!this.currentUser) return;

        const role = this.currentUser.role;

        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–æ–ª–∏ –°–ö–î
        const createEventBtns = document.querySelectorAll('#create-event-btn, .create-event-btn');
        createEventBtns.forEach(btn => {
            if (role === 'skd') {
                btn.style.display = 'none';
            } else {
                btn.style.display = btn.classList.contains('primary-btn') ? 'inline-flex' : 'inline-block';
            }
        });

        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –Ω–µ-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        const createUserBtns = document.querySelectorAll('#create-user-btn, .create-user-btn');
        createUserBtns.forEach(btn => {
            if (role !== 'admin') {
                btn.style.display = 'none';
            } else {
                btn.style.display = btn.classList.contains('primary-btn') ? 'inline-flex' : 'inline-block';
            }
        });

        // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –°–ö–î
        const exportBtns = document.querySelectorAll('#export-btn, .export-btn');
        exportBtns.forEach(btn => {
            if (role === 'skd') {
                btn.style.display = 'none';
            } else {
                btn.style.display = btn.classList.contains('primary-btn') ? 'inline-flex' : 'inline-block';
            }
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º body –∫–ª–∞—Å—Å –¥–ª—è CSS —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
        document.body.className = document.body.className.replace(/\b(admin|moderator|skd)-role\b/g, '');
        document.body.classList.add(`${role}-role`);

        console.log(`üé® –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ä–æ–ª–∏: ${role}`);
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    hasRole(requiredRoles) {
        if (!this.currentUser) return false;
        if (Array.isArray(requiredRoles)) {
            return requiredRoles.includes(this.currentUser.role);
        }
        return this.currentUser.role === requiredRoles;
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    isAdmin() {
        return this.hasRole(['admin']);
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –≤—ã—à–µ
    canModerate() {
        return this.hasRole(['admin', 'moderator']);
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    canScan() {
        return this.hasRole(['admin', 'moderator', 'skd']);
    },

    // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    redirectToLogin() {
        const currentPath = window.location.pathname;
        if (currentPath !== '/login') {
            window.location.href = `/login?return=${encodeURIComponent(currentPath)}`;
        }
    },

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    handleAuthError(error) {
        if (error.message && error.message.includes('401')) {
            this.redirectToLogin();
            return;
        }
        if (typeof utils !== 'undefined' && utils.showAlert) {
            utils.showAlert('error', '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' + error.message);
        }
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—é
    checkAdminAccess() {
        if (!this.isAdmin()) {
            if (typeof utils !== 'undefined' && utils.showAlert) {
                utils.showAlert('error', '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞');
            }
            window.location.href = '/';
            return false;
        }
        return true;
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    checkModeratorAccess() {
        if (!this.canModerate()) {
            if (typeof utils !== 'undefined' && utils.showAlert) {
                utils.showAlert('error', '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞');
            }
            window.location.href = '/';
            return false;
        }
        return true;
    },

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Ä–æ–ª–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    getRoleDisplayText(role = null) {
        const targetRole = role || this.currentUser?.role;
        const roleTexts = {
            'admin': 'üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            'moderator': '‚öôÔ∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä',
            'skd': 'üîí –°–ö–î'
        };
        return roleTexts[targetRole] || targetRole;
    },

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ä–æ–ª–∏
    getRoleColor(role = null) {
        const targetRole = role || this.currentUser?.role;
        const roleColors = {
            'admin': '#d4edda',
            'moderator': '#fff3cd',
            'skd': '#d1ecf1'
        };
        return roleColors[targetRole] || '#f8f9fa';
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    init() {
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        document.addEventListener('click', (e) => {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∞–¥–º–∏–Ω —ç–ª–µ–º–µ–Ω—Ç–∞–º
            if (e.target.classList.contains('admin-only') && !this.isAdmin()) {
                e.preventDefault();
                e.stopPropagation();
                if (typeof utils !== 'undefined' && utils.showAlert) {
                    utils.showAlert('error', '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞');
                }
            }
        });

        console.log('üîê –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    },

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    updateActiveNavigation() {
        const currentPath = window.location.pathname;
        const navLinks = document.querySelectorAll('.nav-link');

        navLinks.forEach(link => {
            link.classList.remove('active');

            const href = link.getAttribute('href');
            if (href === currentPath ||
                (currentPath === '/' && href === '/') ||
                (currentPath.includes(href) && href !== '/')) {
                link.classList.add('active');
            }
        });
    },

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏
    setRoleTheme() {
        if (!this.currentUser) return;

        const root = document.documentElement;
        const role = this.currentUser.role;

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–º—ã —Ä–æ–ª–∏
        switch (role) {
            case 'admin':
                root.style.setProperty('--role-primary', '#dc3545');
                root.style.setProperty('--role-secondary', '#f8d7da');
                break;
            case 'moderator':
                root.style.setProperty('--role-primary', '#ffc107');
                root.style.setProperty('--role-secondary', '#fff3cd');
                break;
            case 'skd':
                root.style.setProperty('--role-primary', '#17a2b8');
                root.style.setProperty('--role-secondary', '#d1ecf1');
                break;
            default:
                root.style.setProperty('--role-primary', '#667eea');
                root.style.setProperty('--role-secondary', '#f8f9fa');
        }
    },

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)
    logUserAction(action, details = {}) {
        if (this.currentUser && typeof console !== 'undefined') {
            console.log(`üë§ ${this.currentUser.username} (${this.currentUser.role}): ${action}`, details);
        }
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏—Å—Ç–µ—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
    checkSessionExpiry() {
        setInterval(async () => {
            try {
                const response = await fetch('/api/auth/check');
                if (!response.ok) {
                    console.log('üîí –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞');
                    this.redirectToLogin();
                }
            } catch (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏:', err);
            }
        }, 5 * 60 * 1000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    showUserInfo() {
        if (!this.currentUser) return;

        const info = {
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å': this.currentUser.fullName,
            '–õ–æ–≥–∏–Ω': this.currentUser.username,
            '–†–æ–ª—å': this.getRoleDisplayText(),
            'ID': this.currentUser.id
        };

        console.table(info);

        if (typeof utils !== 'undefined' && utils.showAlert) {
            const infoText = Object.entries(info)
                .map(([key, value]) => `${key}: ${value}`)
                .join('\n');

            utils.showAlert('info', `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n${infoText}`);
        }
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
if (typeof document !== 'undefined') {
    document.addEventListener('DOMContentLoaded', () => {
        auth.init();
        auth.updateActiveNavigation();
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ URL (–¥–ª—è SPA)
    window.addEventListener('popstate', () => {
        auth.updateActiveNavigation();
    });
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = auth;
}