'use strict'

const { ArrayPrototypePop, Promise } = require('readable-stream/lib/ours/primordials')
const { isIterable, isNodeStream, isWebStream } = require('readable-stream/lib/internal/streams/utils')
const { pipelineImpl: pl } = require('readable-stream/lib/internal/streams/pipeline')
const { finished } = require('readable-stream/lib/internal/streams/end-of-stream')
require('readable-stream/lib/stream.js')
function pipeline(...streams) {
  return new Promise((resolve, reject) => {
    let signal
    let end
    const lastArg = streams[streams.length - 1]
    if (
      lastArg &&
      typeof lastArg === 'object' &&
      !isNodeStream(lastArg) &&
      !isIterable(lastArg) &&
      !isWebStream(lastArg)
    ) {
      const options = ArrayPrototypePop(streams)
      signal = options.signal
      end = options.end
    }
    pl(
      streams,
      (err, value) => {
        if (err) {
          reject(err)
        } else {
          resolve(value)
        }
      },
      {
        signal,
        end
      }
    )
  })
}
module.exports = {
  finished,
  pipeline
}
